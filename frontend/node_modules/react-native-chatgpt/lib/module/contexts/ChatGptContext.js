import React, { createContext, useContext, useMemo } from 'react';
const ChatGptContext = /*#__PURE__*/createContext(undefined);
export const ChatGptProvider = _ref => {
  let {
    status,
    login,
    flush,
    sendMessage,
    children
  } = _ref;
  const contextValue = useMemo(() => ({
    status,
    login,
    sendMessage,
    flush
  }), [status, login, sendMessage, flush]);
  return /*#__PURE__*/React.createElement(ChatGptContext.Provider, {
    value: contextValue
  }, children);
};
export const useChatGpt = () => {
  const context = useContext(ChatGptContext);
  if (!context) {
    throw new Error('useChatGpt must be used within a ChatGptProvider');
  }
  return context;
};
//# sourceMappingURL=ChatGptContext.js.map